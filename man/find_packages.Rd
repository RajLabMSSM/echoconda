% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_packages.R
\name{find_packages}
\alias{find_packages}
\title{Find package across all conda envs}
\usage{
find_packages(
  packages = NULL,
  conda_env = NULL,
  conda = "auto",
  method = c("r", "reticulate", "basilisk"),
  types = c("r", "python", "binary"),
  return_path = FALSE,
  robust = FALSE,
  filter_paths = FALSE,
  sort_names = FALSE,
  nThread = 1,
  verbose = TRUE
)
}
\arguments{
\item{packages}{A package (e.g. \code{"pandas"})
or a list of packages (e.g. \code{c("pandas","r-dplyr","bgzip")}).
Will recognize R packages with or without the prefixes 
"r-" and "bioconductor-" (i.e. "r-dplyr" is equivalent to "dplyr").}

\item{conda_env}{Conda environments to search in. 
If \code{NULL} (default), will search all conda environments.}

\item{conda}{The path to a \code{conda} executable. Use \code{"auto"} to allow
\code{reticulate} to automatically find an appropriate \code{conda} binary.
See \strong{Finding Conda} and \code{\link[reticulate:conda_binary]{conda_binary()}} for more details.}

\item{method}{Method for listing packages in a given conda env.}

\item{types}{Path type to search for and include in the table.}

\item{return_path}{Return only the path to each package.}

\item{robust}{Uses a more robust (but slower) method for identifying paths
to conda environments and package executables (default: \code{FALSE}).
When \code{robust=FALSE}, only executables in the main "bin" directory
 will be detected. When \code{robust=TRUE}, additional executables to
 R packages, Python packages, and executables in nested subdirectories will 
 be detected.}

\item{filter_paths}{Filter out packages without callable executable paths
from the table.}

\item{sort_names}{Sort packages alphanumerically by their name.}

\item{nThread}{Number of threads to use when parallelizing searches across
multiple conda envs.}

\item{verbose}{Print messages.}
}
\value{
Merged data.table with all packages installed in each conda 
environment.
}
\description{
Search for a package (or list of packages) across all available conda
 environments.
 By default, returns all packages from all conda environments.
}
\examples{
pkgs <- echoconda::find_packages(conda_env="base")
}
